// <auto-generated />
using LoanSimPriceAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanSimPriceAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250219200306_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoanSimPriceAPI.Models.LoanProposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AnnualInterestRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("LoanAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NumberOfMonths")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoanProposals");
                });

            modelBuilder.Entity("LoanSimPriceAPI.Models.PaymentFlowSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Interest")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanProposalId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("PaymentScheduleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Principal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanProposalId");

                    b.HasIndex("PaymentScheduleId");

                    b.ToTable("PaymentFlowSummaries");
                });

            modelBuilder.Entity("LoanSimPriceAPI.Models.PaymentSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LoanProposalId")
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlyPayment")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalInterest")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPayment")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanProposalId");

                    b.ToTable("PaymentSchedules");
                });

            modelBuilder.Entity("LoanSimPriceAPI.Models.PaymentFlowSummary", b =>
                {
                    b.HasOne("LoanSimPriceAPI.Models.LoanProposal", "LoanProposal")
                        .WithMany()
                        .HasForeignKey("LoanProposalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LoanSimPriceAPI.Models.PaymentSchedule", "PaymentSchedule")
                        .WithMany("PaymentScheduleDetails")
                        .HasForeignKey("PaymentScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LoanProposal");

                    b.Navigation("PaymentSchedule");
                });

            modelBuilder.Entity("LoanSimPriceAPI.Models.PaymentSchedule", b =>
                {
                    b.HasOne("LoanSimPriceAPI.Models.LoanProposal", "LoanProposal")
                        .WithMany("PaymentSchedules")
                        .HasForeignKey("LoanProposalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LoanProposal");
                });

            modelBuilder.Entity("LoanSimPriceAPI.Models.LoanProposal", b =>
                {
                    b.Navigation("PaymentSchedules");
                });

            modelBuilder.Entity("LoanSimPriceAPI.Models.PaymentSchedule", b =>
                {
                    b.Navigation("PaymentScheduleDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
